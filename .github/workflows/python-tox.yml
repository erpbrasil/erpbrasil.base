# This workflow will install Python dependencies, run tests and lint with a variety of Python versions using tox
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python tox Tests

on:
  push:
    branches: [ master ]
    tags: '*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox: ['check', 'docs']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install virtualenv tox
    - name: Run tox - check
      env:
        TOXENV: ${{ matrix.tox }}
      run: |
        tox -v

  test:
    runs-on: ubuntu-latest
    needs: [checks]
    strategy:
      max-parallel: 1
      matrix:
        include:
#        - python-version: 3.4
#          toxenv: py34,codecov
        - python-version: 3.5
          toxenv: py35,codecov
        - python-version: 3.6
          toxenv: py36,codecov
        - python-version: 3.7
          toxenv: py37,codecov
#        - python-version: '3.10.0-alpha - 3.10'
#          toxenv: pypy3,codecov
        - python-version: pypy-3.6
          toxenv: pypy3,codecov
          toxpython: pypy3
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show worker info
      run: |
        python --version
        uname -a
        lsb_release -a || true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install virtualenv tox
    - name: Show package versions
      run: |
        virtualenv --version
        pip --version
        python -c 'import setuptools; print("setuptools", setuptools.__version__)'
        tox --version
    - name: Run tox - ${{ matrix.toxenv }}
      env:
        TOXENV: ${{ matrix.toxenv }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: Python ${{ matrix.python-version }}
      run: |
        if [ "${{ matrix.toxpython }}" != "" ]; then
          export TOXPYTHON=${{ matrix.toxpython }}
        fi
        tox -v
    - name: On failure dumps logs
      if: failure()
      run: |
        cat .tox/log/*
        cat .tox/*/log/*